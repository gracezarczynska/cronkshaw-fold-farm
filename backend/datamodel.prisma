enum Permission {
  ADMIN
  USER
  FARMER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type Product {
  id: ID! @id @unique
  name: String!
  frequencyStock: Int!
  availableStock: Int
  price: Float!
  unit: String!
  pluralUnit: String
  description: String
  image: String
  farm: Farm! # relationship to Farm
  deliveryDays: [Int] @scalarList(strategy:RELATION)
  deliveryFrequency: String
  startDate: DateTime
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type User {
  id: ID! @id @unique
  name: String!
  surname: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: String
  permissions: [Permission] @scalarList(strategy:RELATION)
  address1: String
  address2: String
  postcode: String
  city: String
  housePicture: String
  dropOffPicture: String
  subscriptions: [Enrollment!]! @relation(name: "UserSubscription")
  deliveryInstructions: String
  stripeId: String @unique
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  active: Boolean
  activationToken: String
}

type Enrollment {
  id: ID! @id @unique
  quantity: Int! @default(value: 1)
  subscriptionFrequency: String
  subscriptionStartDate: DateTime
  overrides: [Override]
  product: Product! @relation(name: "ProdSubscription")
  user: User! @relation(name: "UserSubscription")
  monthlyPrice: Int!
  charge: String!
  subscriptionId: String
  subscriptionDates: [DateTime!]! @scalarList(strategy:RELATION)
}

type Farm {
  id: ID! @id @unique
  name: String!
  description: String
  address: String!
  postcode: String!
  products: [Product!]
  image: String!
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Override {
  id: ID! @id @unique
  subscriptions: Enrollment! # relationship to Enrollment
  startDate: DateTime
  endDate: DateTime
  quantity: Int
  status: String
}